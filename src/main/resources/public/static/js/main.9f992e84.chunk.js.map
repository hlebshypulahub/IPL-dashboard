{"version":3,"sources":["components/MatchDetailCard.js","components/MatchSmallCard.js","pages/TeamPage.js","components/YearSelector.js","pages/MatchPage.js","components/TeamTile.js","pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["MatchDetailCard","teamName","match","otherTeam","team1","team2","isMatchWon","matchWinner","className","to","date","venue","resultMargin","result","playerOfMatch","umpire1","umpire2","MatchSmallCard","TeamPage","useState","matches","team","setTeam","useParams","useEffect","fetchTeam","a","fetch","process","response","json","data","title","value","totalWins","color","totalMatches","slice","map","id","YearSelector","years","i","push","year","MatchPage","setMatches","fetchMatches","length","TeamTile","HomePage","teams","setTeams","fetchAllTeams","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9f992e84.chunk.js","sourcesContent":["import { React } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./MatchDetailCard.scss\";\r\n\r\nexport const MatchDetailCard = ({ teamName, match }) => {\r\n    if (!match) return null;\r\n\r\n    const otherTeam = match.team1 === teamName ? match.team2 : match.team1;\r\n\r\n    const isMatchWon = teamName === match.matchWinner;\r\n\r\n    return (\r\n        <div\r\n            className={\r\n                isMatchWon\r\n                    ? \"MatchDetailCard won-card\"\r\n                    : \"MatchDetailCard lost-card\"\r\n            }\r\n        >\r\n            <div>\r\n                <span className=\"vs\">vs</span>\r\n                <h1>\r\n                    <Link to={`/teams/${otherTeam}`}> {otherTeam} </Link>\r\n                </h1>\r\n                <h2 className=\"match-date\">{match.date}</h2>\r\n                <h3 className=\"match-venue\">at {match.venue}</h3>\r\n                <h3 className=\"match-result\">\r\n                    {match.matchWinner} won by {match.resultMargin}{\" \"}\r\n                    {match.result}\r\n                </h3>\r\n            </div>\r\n            <div className=\"additional-detail\">\r\n                <h3>First Innings</h3>\r\n                <p>{match.team1}</p>\r\n                <h3>Second Innings</h3>\r\n                <p>{match.team2}</p>\r\n                <h3>Man of the match</h3>\r\n                <p>{match.playerOfMatch}</p>\r\n                <h3>Umpires</h3>\r\n                <p>\r\n                    {match.umpire1}, {match.umpire2}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import { React } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./MatchSmallCard.scss\";\r\n\r\nexport const MatchSmallCard = ({ teamName, match }) => {\r\n    if (!match) return null;\r\n\r\n    const otherTeam = match.team1 === teamName ? match.team2 : match.team1;\r\n\r\n    const isMatchWon = teamName === match.matchWinner;\r\n\r\n    return (\r\n        <div\r\n            className={\r\n                isMatchWon\r\n                    ? \"MatchSmallCard won-card\"\r\n                    : \"MatchSmallCard lost-card\"\r\n            }\r\n        >\r\n            <span className=\"vs\">vs</span>\r\n            <h3>\r\n                <Link to={`/teams/${otherTeam}`}> {otherTeam} </Link>\r\n            </h3>\r\n            <p className=\"match-result\">\r\n                {match.matchWinner} won by {match.resultMargin} {match.result}\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n","import \"./TeamPage.scss\";\r\nimport { PieChart } from \"react-minimal-pie-chart\";\r\nimport { React, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { MatchDetailCard } from \"../components/MatchDetailCard\";\r\nimport { MatchSmallCard } from \"../components/MatchSmallCard\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const TeamPage = () => {\r\n    const [team, setTeam] = useState({ matches: [] });\r\n    const { teamName } = useParams();\r\n\r\n    useEffect(() => {\r\n        const fetchTeam = async () => {\r\n            const response = await fetch(\r\n                `${process.env.REACT_APP_API_ROOT_URL}/team/${teamName}`\r\n            );\r\n            const data = await response.json();\r\n            setTeam(data);\r\n        };\r\n\r\n        fetchTeam();\r\n    }, [teamName]);\r\n\r\n    if (!team || !team.teamName) {\r\n        return <h1>Team not found!</h1>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"TeamPage\">\r\n            <div className=\"team-name-section\">\r\n                <h1 className=\"team-name\">{team.teamName}</h1>\r\n            </div>\r\n            <div className=\"win-loss-section\">\r\n                Wins / Losses\r\n                <PieChart\r\n                    data={[\r\n                        {\r\n                            title: \"Wins\",\r\n                            value: team.totalWins,\r\n                            color: \"rgb(92, 163, 92)\",\r\n                        },\r\n                        {\r\n                            title: \"Losses\",\r\n                            value: team.totalMatches - team.totalWins,\r\n                            color: \"rgb(209, 87, 87)\",\r\n                        },\r\n                    ]}\r\n                />\r\n            </div>\r\n            <div className=\"match-detail-section\">\r\n                <h3>Lates Matches</h3>\r\n                <MatchDetailCard\r\n                    teamName={team.teamName}\r\n                    match={team.matches[0]}\r\n                />\r\n            </div>\r\n            {team.matches.slice(1).map((match) => (\r\n                <MatchSmallCard\r\n                    key={match.id}\r\n                    teamName={team.teamName}\r\n                    match={match}\r\n                />\r\n            ))}\r\n            <div className=\"more-section\">\r\n                <Link\r\n                    to={`/teams/${teamName}/matches/${process.env.REACT_APP_DATA_END_YEAR}`}\r\n                >\r\n                    More &gt;\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import { React } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./YearSelector.scss\";\r\n\r\nexport const YearSelector = ({ teamName }) => {\r\n    let years = [];\r\n    const startYear = process.env.REACT_APP_DATA_START_YEAR;\r\n    const endYear = process.env.REACT_APP_DATA_END_YEAR;\r\n\r\n    for (let i = startYear; i <= endYear; i++) {\r\n        years.push(i);\r\n    }\r\n\r\n    return (\r\n        <ol className=\"YearSelector\">\r\n            {years.map((year) => (\r\n                <li key={year}>\r\n                    <Link to={`/teams/${teamName}/matches/${year}`}>\r\n                        {year}\r\n                    </Link>\r\n                </li>\r\n            ))}\r\n        </ol>\r\n    );\r\n};\r\n","import { React, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { MatchDetailCard } from \"../components/MatchDetailCard\";\r\nimport { YearSelector } from \"../components/YearSelector\";\r\n\r\nimport \"./MatchPage.scss\";\r\n\r\nexport const MatchPage = () => {\r\n    const [matches, setMatches] = useState([]);\r\n    const { teamName, year } = useParams();\r\n\r\n    useEffect(() => {\r\n        const fetchMatches = async () => {\r\n            const response = await fetch(\r\n                `${process.env.REACT_APP_API_ROOT_URL}/team/${teamName}/matches?year=${year}`\r\n            );\r\n            const data = await response.json();\r\n            setMatches(data);\r\n        };\r\n        fetchMatches();\r\n    }, [teamName, year]);\r\n\r\n    if (matches.length === 0) {\r\n        return <h1>Matches not found!</h1>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"MatchPage\">\r\n            <div className=\"year-selector\">\r\n                <h3>Select year</h3>\r\n                <YearSelector key={year} teamName={teamName} />\r\n            </div>\r\n            <div>\r\n                <h1 className=\"page-heading\">\r\n                    {teamName} matches in {year}\r\n                </h1>\r\n                <div>\r\n                    {matches.map((match) => (\r\n                        <MatchDetailCard key={match.id} teamName={teamName} match={match} />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import { React } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./TeamTile.scss\";\r\n\r\nexport const TeamTile = ({ teamName }) => {\r\n    return (\r\n        <div className=\"TeamTile\">\r\n            <h1>\r\n                <Link to={`/teams/${teamName}`}>{teamName}</Link>\r\n            </h1>\r\n        </div>\r\n    );\r\n};\r\n","import \"./HomePage.scss\";\r\nimport { React, useEffect, useState } from \"react\";\r\nimport { TeamTile } from \"../components/TeamTile\";\r\n\r\nexport const HomePage = () => {\r\n    const [teams, setTeams] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAllTeams = async () => {\r\n            const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team`);\r\n            const data = await response.json();\r\n            setTeams(data);\r\n        };\r\n\r\n        fetchAllTeams();\r\n    }, [teams]);\r\n\r\n    return (\r\n        <div className=\"HomePage\">\r\n            <div className=\"header-section\">\r\n                <h1 className=\"app-name\">IPL Dashboard</h1>\r\n            </div>\r\n            <div className=\"team-grid\">\r\n                {teams.map((team) => (\r\n                    <TeamTile key={team.id} teamName={team.teamName}></TeamTile>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import \"./App.scss\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { TeamPage } from \"./pages/TeamPage\";\nimport { MatchPage } from \"./pages/MatchPage\";\nimport { HomePage } from \"./pages/HomePage\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Router>\n                <Switch>\n                    <Route path=\"/teams/:teamName/matches/:year\">\n                        <MatchPage />\n                    </Route>\n                    <Route path=\"/teams/:teamName\">\n                        <TeamPage />\n                    </Route>\n                    <Route path=\"/\">\n                        <HomePage />\n                    </Route>\n                </Switch>\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}